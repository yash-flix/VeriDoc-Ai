<%- include('layouts/boilerplate.ejs') %>
<body>
  <h1>All Uploads</h1>

  <% if (success_msg) { %>
    <p style="color: #000;"><%= success_msg %></p>
  <% } %>

  <% if (error_msg) { %>
    <p style="color: #666;"><%= error_msg %></p>
  <% } %>

  <% if (uploads.length === 0) { %>
    <p>No uploads yet.</p>
  <% } else { %>
    <table border="1" cellpadding="10" style="width:100%; border-collapse: collapse;">
      <tr>
        <th>File Name</th>
        <th>Type</th>
        <th>Status</th>
        <th>Score</th>
        <th>View</th>
        <th>Actions</th>
      </tr>
      <% uploads.forEach(upload => { %>
        <tr id="row-<%= upload._id %>">
          <td><%= upload.fileName %></td>
          <td><%= upload.fileType %></td>
          <td class="status"><%= upload.result ? upload.result.status : "Pending" %></td>
          <td class="score"><%= upload.result ? (upload.result.authenticityScore || "N/A") : "N/A" %></td>
          <td>
            <% if (upload.fileUrl) { %>
              <a href="<%= upload.fileUrl %>" target="_blank">Open</a>
            <% } else { %>
              No file
            <% } %>
          </td>
          <td>
            <button onclick="verifyDoc('<%= upload._id %>')">Verify</button>
            <button onclick="approveDoc('<%= upload._id %>')">Approve</button>
            <button onclick="rejectDoc('<%= upload._id %>')">Reject</button>
            <button onclick="toggleDetails('<%= upload._id %>')">Quick Details</button>
            <a href="/result/<%= upload._id %>" style="
              display: inline-block;
              padding: 5px 10px;
              background-color: #000;
              color: white;
              text-decoration: none;
              border-radius: 3px;
              margin-left: 5px;
            ">Full Report</a>
          </td>
        </tr>

        <!-- Collapsible AI Analysis Row -->
        <tr id="details-<%= upload._id %>" style="display:none; background:#f5f5f5;">
          <td colspan="6">
            <strong>AI Analysis (Quick View):</strong><br>
            <ul>
              <li><strong>Status:</strong> <%= upload.result?.status || "N/A" %></li>
              <li><strong>Authenticity Score:</strong> <%= upload.result?.authenticityScore || "N/A" %></li>
              <li><strong>Anomalies:</strong> 
                <% if (upload.result?.anomalies && upload.result.anomalies.length > 0) { %>
                  <%= upload.result.anomalies.join(", ") %>
                <% } else { %>
                  None
                <% } %>
              </li>
              <li><strong>Verified Against Models:</strong>
                <% if (upload.result?.verifiedAgainst && upload.result.verifiedAgainst.length > 0) { %>
                  <%= upload.result.verifiedAgainst.join(", ") %>
                <% } else { %>
                  Not available
                <% } %>
              </li>
              <li><strong>Last Checked:</strong> <%= upload.createdAt.toLocaleString() %></li>
            </ul>
            <a href="/result/<%= upload._id %>" style="
              display: inline-block;
              margin-top: 10px;
              padding: 8px 15px;
              background-color: #333;
              color: white;
              text-decoration: none;
              border-radius: 3px;
            ">View Detailed Report â†’</a>
          </td>
        </tr>
      <% }) %>
    </table>
  <% } %>

  <style>
    body {
      font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
      margin: 20px;
      background-color: #ffffff;
      color: #000;
    }

    h1 {
      color: #000;
      border-bottom: 3px solid #000;
      padding-bottom: 10px;
    }

    table {
      background-color: white;
      box-shadow: 0 2px 10px rgba(0,0,0,0.15);
      border: 1px solid #ddd;
    }

    th {
      background-color: #000;
      color: white;
      padding: 14px;
      font-weight: 600;
      text-transform: uppercase;
      letter-spacing: 0.5px;
    }

    td {
      padding: 12px;
      border-bottom: 1px solid #e0e0e0;
    }

    tr:hover {
      background-color: #f9f9f9;
    }

    button {
      padding: 7px 14px;
      margin: 2px;
      border: 1px solid #333;
      border-radius: 3px;
      cursor: pointer;
      font-size: 13px;
      font-weight: 500;
      transition: all 0.3s;
      background-color: white;
      color: #000;
    }

    button:hover {
      background-color: #000;
      color: white;
    }

    button:nth-child(1) {
      border-color: #555;
    }

    button:nth-child(2) {
      border-color: #000;
    }

    button:nth-child(3) {
      border-color: #666;
    }

    button:nth-child(4) {
      border-color: #999;
    }

    .status {
      font-weight: bold;
      text-transform: uppercase;
      letter-spacing: 0.5px;
    }

    .score {
      font-weight: bold;
      color: #000;
      font-size: 1.1em;
    }

    a {
      color: #000;
      text-decoration: none;
      font-weight: 500;
    }

    a:hover {
      text-decoration: underline;
    }
  </style>

  <script>
    async function verifyDoc(id) {
      try {
        const res = await fetch(`/api/verify/${id}`, { method: "POST" });
        const data = await res.json();
        
        if (data.success) {
          updateRow(id, data.result);
          alert("Verification completed!");
        } else {
          alert("Verification failed: " + data.message);
        }
      } catch (err) {
        console.error("Verify error:", err);
        alert("Verification request failed");
      }
    }

    async function approveDoc(id) {
      if (!confirm("Approve this document?")) return;
      
      try {
        const res = await fetch(`/api/approve/${id}`, { method: "POST" });
        const data = await res.json();
        
        if (data.success) {
          updateRow(id, data.result);
          alert("Document approved!");
        } else {
          alert("Approval failed: " + data.message);
        }
      } catch (err) {
        console.error("Approve error:", err);
        alert("Approval request failed");
      }
    }

    async function rejectDoc(id) {
      if (!confirm("Reject this document?")) return;
      
      try {
        const res = await fetch(`/api/reject/${id}`, { method: "POST" });
        const data = await res.json();
        
        if (data.success) {
          updateRow(id, data.result);
          alert("Document rejected!");
        } else {
          alert("Rejection failed: " + data.message);
        }
      } catch (err) {
        console.error("Reject error:", err);
        alert("Rejection request failed");
      }
    }

    function updateRow(id, result) {
      const row = document.getElementById(`row-${id}`);
      row.querySelector(".status").textContent = result.status;
      row.querySelector(".score").textContent = result.authenticityScore ?? "N/A";

      // Black & white color coding
      const statusCell = row.querySelector(".status");
      if (result.status === "authentic" || result.status === "approved") {
        statusCell.style.color = "#000";
        statusCell.style.fontWeight = "bold";
      } else if (result.status === "suspicious") {
        statusCell.style.color = "#666";
      } else if (result.status === "fake" || result.status === "rejected") {
        statusCell.style.color = "#999";
        statusCell.style.textDecoration = "line-through";
      }

      const detailsRow = document.getElementById(`details-${id}`);
      if (detailsRow) {
        detailsRow.querySelector("ul").innerHTML = `
          <li><strong>Status:</strong> ${result.status}</li>
          <li><strong>Authenticity Score:</strong> ${result.authenticityScore ?? "N/A"}</li>
          <li><strong>Anomalies:</strong> ${(result.anomalies && result.anomalies.length > 0) ? result.anomalies.join(", ") : "None"}</li>
          <li><strong>Verified Against Models:</strong> ${(result.verifiedAgainst && result.verifiedAgainst.length > 0) ? result.verifiedAgainst.join(", ") : "Not available"}</li>
          <li><strong>Last Checked:</strong> ${new Date().toLocaleString()}</li>
        `;
      }
    }

    function toggleDetails(id) {
      const detailsRow = document.getElementById(`details-${id}`);
      detailsRow.style.display = detailsRow.style.display === "none" ? "table-row" : "none";
    }
  </script>
</body>
</html>
